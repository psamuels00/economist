# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  #config.vm.box = "hashicorp/precise64"
  #config.vm.box = "ubuntu/trusty64"
  config.vm.box = "ubuntu/xenial64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"
  # config.vm.network "forwarded_port", guest: 80, host: 4567

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.
  config.vm.provider "virtualbox" do |vb|
    vb.customize [ "guestproperty", "set", :id, "/VirtualBox/GuestAdd/VBoxService/--timesync-set-threshold", 1000 ]
  end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  #config.vm.provision :shell, path: "bootstrap.sh"
  config.vm.provision "shell", inline: <<-SHELL
    apt-get update

    # Virtual Box Guest Additions
    apt-get install -y dkms
    apt-get install -y virtualbox-guest-additions-iso

    # Sync time
    apt-get install -y ntp
    timedatectl set-ntp on

    # Set time zone
    timedatectl set-timezone America/Los_Angeles

    # Shell prompt
    if ! grep -q set_prompt ~vagrant/.bashrc; then
        cp /vagrant/vagrant-files/set_prompt.sh ~vagrant/
        echo >> ~vagrant/.bashrc
        echo '. ~/set_prompt.sh yellow bright underscore bright' >> ~vagrant/.bashrc
    fi

    # Vim setup
    cp -r /vagrant/vagrant-files/.vim* ~/
    cp -r /vagrant/vagrant-files/.vim* ~vagrant/
    chown -R vagrant:vagrant ~vagrant/.vim*

    # Git setup
    cp  /vagrant/vagrant-files/.gitconfig ~vagrant/
    cp  /vagrant/vagrant-files/id_rsa ~vagrant/.ssh/
    chown vagrant:vagrant ~vagrant/.gitconfig ~vagrant/.ssh/id_rsa
    sudo -u vagrant git config --global push.default simple

    # Initial directory
    if ! grep -q 'cd /vagrant' ~vagrant/.bashrc; then
        echo >> ~vagrant/.bashrc
        echo 'cd /vagrant' >> ~vagrant/.bashrc
    fi

    # Binary calculator
    apt-get install -y bc

    # Node and npm
    curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -
    apt-get install -y nodejs
    npm i -g npm
    ## You may also need development tools to build native addons:
    apt-get install -y gcc g++ make
    ## To install the Yarn package manager, run:
    #curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    #echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
    #apt-get update && apt-get install yarn

    # ESLint and Mocha
    npm install -g eslint mocha eslint-plugin-mocha
  SHELL
end
